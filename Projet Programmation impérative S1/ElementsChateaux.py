#Fichier étant utilisé par "le jeu du château". Ecrite par Soler Lillian et Genoud-Duvillaret Benoît.

import random
from turtle import *
from math import *
from PolygonesEtMouvements import *


    
#Def nécessaire à Chateau:

def briqueTour(base,haut,hauteur,ligneHorizontale1,ligneVerticale,ligneHorizontale2,couleurClair,couleurBas):
    hautTrapeze (base,haut,hauteur)
    pencolor(couleurClair)
    forward(ligneHorizontale1)
    right(90)
    pencolor(couleurBas)
    forward(ligneVerticale)
    backward(ligneVerticale)
    left(90)
    pencolor(couleurClair)
    forward (ligneHorizontale2)
    backward (ligneHorizontale1+ligneHorizontale2)

def briqueTombée(lgCote1,lrgCote1,multiple,x,y):
    aller(x,y)
    dessineRectangle(lgCote1,lrgCote1,"#434343","#6e6e6e")
    dessineRectangle(lgCote1*multiple,lrgCote1,"#6e6e6e","#8a8a8a")
    dessineRectangle(lgCote1,lrgCote1,"#434343","")

def créneaux (nombreCréneaux,hauteur,longueurHautDébut,longueurHautFin,longueurBas,hauteurCrénaux,couleurTrait,couleurPlein) :
    pencolor(couleurTrait)
    fillcolor(couleurPlein)
    begin_fill()
    longueurTot=nombreCréneaux*(longueurHautDébut+longueurBas)+longueurHautFin
    i=1
    forward(hauteur)
    while i<=nombreCréneaux :
        right (90)
        forward (longueurHautDébut)
        right(90)
        forward (hauteurCrénaux)
        left(90)
        forward (longueurBas)
        left(90)
        forward (hauteurCrénaux)
        i=i+1
    right(90)
    forward (longueurHautFin)
    right(90)
    forward (hauteur)
    right(90)
    forward(longueurTot)
    right(90)
    
    end_fill()


def toit (base, hauteur,couleurTrait1,couleurTrait2,couleurPlein1,couleurPlein2):
    hypoténuse=sqrt((base/2)*(base/2)+hauteur*hauteur)
    angleHaut=abs(90-acos((base/2)/hypoténuse)*180/pi)                     
    angleBas=abs(90-angleHaut)
    pencolor(couleurTrait1)
    fillcolor(couleurPlein1)
    begin_fill()
    forward(base/2)
    left(90)
    pencolor(couleurPlein1)
    forward(hauteur)
    pencolor(couleurTrait1)
    left(180-angleHaut)
    forward(hypoténuse)
    left(180-angleBas)
    forward(base/2)
    end_fill()
    pencolor(couleurTrait2)
    fillcolor(couleurPlein2)
    begin_fill()
    forward(base/2)
    left(180-angleBas)
    forward(hypoténuse)
    left(180-angleHaut)
    pencolor(couleurPlein1)
    forward(hauteur)
    pencolor(couleurTrait1)
    left(90)
    end_fill()
    backward(base/2)

def boule(rayon):
    pencolor("#6a6803")
    fillcolor("#dad603")
    begin_fill()
    circle(rayon)
    end_fill()
    left(90)
    pencolor("#dad603")
    forward(1/3*rayon)
    right(90)
    fillcolor("#f8f30a")
    begin_fill()
    circle(2/3*rayon)
    end_fill()
    pencolor("#dad603")
    right(90)
    forward(1/3*rayon)
    left(90)
    pencolor("#6a6803")

def bannièreChateau(longueurBarre,largeurBarre,rayonBoule,longueurDrapeaux,x,y):
    aller(x,y)
    up()
    forward(longueurBarre*1/2)
    right(90)
    down()
    boule (rayonBoule)
    forward(largeurBarre*1/2)
    right(180)
    dessineRectangle(largeurBarre,longueurBarre,"#361e01","#814803")
    hautTrapeze(largeurBarre,largeurBarre,longueurBarre)
    forward(largeurBarre*1/2)
    boule (rayonBoule)
    backward (largeurBarre*1/2)
    right(90)
    forward(1/9*longueurBarre)
    right(90)
    forward(1/9*longueurBarre-1/2*largeurBarre)
    right(180)
    créneaux (3,3/18*longueurBarre,1/9*longueurBarre,1/9*longueurBarre,1/9*longueurBarre,2/9*longueurBarre,"#5f1300","#bc0101")
    left(90)
    forward(1/9*longueurBarre)
    left(90)
    fillcolor("#d40000")
    begin_fill()
    forward(longueurDrapeaux)
    left(150)
    forward(longueurBarre)
    right(120)
    forward(longueurBarre)
    left(150)
    forward(longueurDrapeaux)
    left(90)
    forward(longueurBarre)
    end_fill()
    right(180)
    aller(x,y)


def drapeauxTourChateaux(longueurBarre,largeurBarre,rayonBoule, longueurDrapeaux, largeurDrapeaux,x,y) :
    aller(x,y)
    backward(1/2*largeurBarre)
    dessineRectangle(largeurBarre,longueurBarre,"#361e01","#814803")
    hautTrapeze(largeurBarre,largeurBarre,longueurBarre)
    forward(largeurBarre*1/2)
    boule (rayonBoule)
    pencolor("#673a03")
    backward (largeurBarre*1/2)
    right(90)
    forward(1/20*longueurBarre)
    right(90)
    forward(1/9*largeurDrapeaux-1/2*largeurBarre)
    right(180)
    créneaux (3,2/9*largeurDrapeaux,1/9*largeurDrapeaux,1/9*largeurDrapeaux,1/9*largeurDrapeaux,2/9*largeurDrapeaux,"#5f1300","#bc0101")
    left(90)
    forward(1/9*largeurDrapeaux)
    left(90)
    dessineRectangle(1/3*longueurDrapeaux,largeurDrapeaux,"#5f1300","#990000")
    forward(1/3*longueurDrapeaux)
    left(90)
    circle(2,90)
    forward(1/10*longueurDrapeaux)
    left(180)
    circle(2,-90)
    left(90)
    fillcolor("#d40000")
    begin_fill()
    forward(3/4*longueurDrapeaux)
    left(150)
    forward(largeurDrapeaux)
    right(120)
    forward(largeurDrapeaux)
    left(150)
    forward(3/4*longueurDrapeaux-3)
    circle(3,90)
    forward(largeurDrapeaux)
    end_fill()
    right(90)
    aller(x,y)

def drapeauxBlanc(longueurBarre,largeurBarre,longueurDrapeaux, largeurDrapeaux,x,y) :
    aller(x,y)
    dessineRectangle(largeurBarre,longueurBarre,"#361e01","#814803")
    hautTrapeze(largeurBarre,largeurBarre,longueurBarre)
    forward(largeurBarre)
    right(90)
    forward(1/12*longueurBarre)
    left(90)
    forward(1/10*largeurDrapeaux-1/2*largeurBarre)
    left(180)
    dessineRectangle(2/10*largeurDrapeaux,2/10*largeurDrapeaux,"#6f6f6f","white")
    right(90)
    forward(1/8*largeurDrapeaux)
    right(180)
    dessineRectangle(largeurDrapeaux,longueurDrapeaux,"#6f6f6f","white")
    forward (7/10*largeurDrapeaux)
    right(90)
    dessineRectangle(2/10*largeurDrapeaux,2/10*largeurDrapeaux,"#6f6f6f","white")
    right(180)
    aller(x,y)

def drapeauxTourChateauxFin(longueurBarre,largeurBarre,rayonBoule, longueurDrapeaux, largeurDrapeaux,couleurTraits,couleurDrapeauFoncé,couleurDrapeauClair,x,y):
    aller(x,y)
    right(90)
    créneaux (3,2/9*largeurDrapeaux,1/9*largeurDrapeaux,1/9*largeurDrapeaux,1/9*largeurDrapeaux,2/9*largeurDrapeaux,"couleurTraits","#bc0101")
    left(90)
    forward(1/9*largeurDrapeaux)
    left(90)
    dessineRectangle(1/3*longueurDrapeaux,largeurDrapeaux,couleurTraits,couleurDrapeauFoncé)
    forward(1/3*longueurDrapeaux)
    left(90)
    circle(2,90)
    forward(1/10*longueurDrapeaux)
    left(180)
    circle(2,-90)
    left(90)
    fillcolor(couleurDrapeauClair)
    begin_fill()
    forward(3/4*longueurDrapeaux)
    left(150)
    forward(largeurDrapeaux)
    right(120)
    forward(largeurDrapeaux)
    left(150)
    forward(3/4*longueurDrapeaux-3)
    circle(3,90)
    forward(largeurDrapeaux)
    end_fill()
    right(90)
    aller(x,y)


def porte (rayon, hauteur,couleurTrait,couleurPlein):
    pencolor(couleurTrait)
    fillcolor(couleurPlein)
    begin_fill()
    forward (rayon)
    left(90)
    forward (hauteur)
    circle(rayon,180)
    forward (hauteur)
    left(90)
    forward (rayon)
    end_fill()

def maison (base,hauteurMur,hauteurToit,couleurTrait,couleurPlein):
    toit=sqrt((base/2)*(base/2)+hauteurToit*hauteurToit)
    angleHaut=abs(90-acos((base/2)/toit)*180/pi)                     
    angleBas=abs(90-angleHaut)

    pencolor(couleurTrait)
    fillcolor(couleurPlein)
    begin_fill()
    forward(base)
    left(90)
    forward(hauteurMur)
    left(90-angleBas)
    forward(toit)
    left(180-2*angleHaut)
    forward(toit)
    left(90-angleBas)
    forward(hauteurMur)
    left(90)
    end_fill()


